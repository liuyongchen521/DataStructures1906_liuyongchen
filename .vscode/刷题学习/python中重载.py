函数重载主要是为了解决两个问题。

可变参数类型。
可变参数个数。

另外，一个基本的设计原则是，仅仅当两个函数除了参数类型和参数个数不同以外，其功能是完全相同的，此时才使用函数重载，如果两个函数的功能其实不同，
那么不应当使用重载，而应当使用一个名字不同的函数。

那么对于情况一，函数功能相同，但是函数类型不同，python如何处理
答案是根本不需要处理，因为 python 可以接受任何类型的参数，如果函数的功能相同，那么不同的参数类型在 
python 中很可能是相同的代码，没有必要做成两个不同函数。

那么对于情况 2 ，函数功能相同，但参数个数不同，python 如何处理？
大家知道，答案就是缺省参数。对那些缺少的参数设定为缺省参数即可解决问题。
因为你假设函数功能相同，那么那些缺少的参数终归是需要用的。


# 1.缺省参数 即有默认值的参数 例如：
def test1(a, b = 3):
	print(a, b)
 
test1(0)# 打印结果：0 3
test1(0,1)# 打印结果： 0 1
 
# 2.变长参数 即参数的个数没有确定长度 例如：
def test2(a, b, *args):
	print(a, b, args)
 
test2(1, 2, 3, 4, 5, 6, 7) # 打印结果：1 2 (3,4,5,6,7) 也就是除去 a,b之外所有的参数都是args中的元素，并以元祖形式存在
 
# 3.关键字参数 即参数以 key=value的形式给出 例如
def test3(a, b, **kwargs):
	print(a, b, kwargs)
 
test3(1, 2, 'name'='pengshuyi', 'age'=20)# 打印结果：1 2 {'name':'pengshuyi', 'age':20} kv对以字典形式存在
 
# 4.各类型参数
test4(a, b=2, *args, **kwargs):
	print(a, b, args, kwargs)
 
test4(0,1,2,3,4, 'name'='pengpeng', 'age'=18)# 打印结果：0 1 (2,3,4) {'name':'pengpeng','age':18}